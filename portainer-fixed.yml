version: '3.8'

services:
  glide-api-gateway:
    image: node:18-alpine
    container_name: glide-api-gateway
    restart: unless-stopped
    working_dir: /app
    command: >
      sh -c "
      apk add --no-cache curl wget &&
      
      cat > package.json << 'PACKAGEEOF'
      {
        \"name\": \"glide-api-gateway\",
        \"version\": \"1.0.0\",
        \"main\": \"index.js\",
        \"dependencies\": {
          \"express\": \"^4.18.2\",
          \"cors\": \"^2.8.5\",
          \"express-rate-limit\": \"^6.7.0\",
          \"axios\": \"^1.4.0\"
        }
      }
      PACKAGEEOF
      
      cat > index.js << 'JSEOF'
      const express = require('express');
      const cors = require('cors');
      const rateLimit = require('express-rate-limit');
      const axios = require('axios');
      
      const app = express();
      const port = process.env.PORT || 3000;
      
      app.use(cors({ origin: process.env.CORS_ORIGIN || '*' }));
      app.use(express.json());
      
      const limiter = rateLimit({
        windowMs: (process.env.RATE_LIMIT_WINDOW || 15) * 60 * 1000,
        max: process.env.RATE_LIMIT_MAX || 100
      });
      app.use(limiter);
      
      app.get('/health', (req, res) => {
        res.json({ 
          status: 'healthy', 
          timestamp: new Date().toISOString(),
          version: '1.0.0'
        });
      });
      
      app.post('/api/execute', async (req, res) => {
        try {
          const { api_name, method, path, data } = req.body;
          
          if (api_name !== 'glide-api-v1') {
            return res.status(400).json({ error: 'Invalid API name' });
          }
          
          const response = await axios({
            method: method || 'POST',
            url: process.env.API_1_BASE_URL + path,
            headers: {
              'Authorization': process.env.API_1_HEADER_AUTHORIZATION,
              'Content-Type': 'application/json'
            },
            data: data
          });
          
          res.json(response.data);
        } catch (error) {
          res.status(500).json({ 
            error: error.message,
            details: error.response?.data 
          });
        }
      });
      
      app.listen(port, () => {
        console.log('Glide API Gateway running on port ' + port);
      });
      JSEOF
      
      npm install &&
      node index.js
      "
    ports:
      - "7777:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - GLIDE_API_KEY=bcc7a00b-6919-47e1-8724-30999251a866
      - GLIDE_APP_ID=KyQIgjT4O1JsARXgkzsv
      - API_1_NAME=glide-api-v1
      - API_1_BASE_URL=https://api.glideapp.io/api/function
      - API_1_HEADER_AUTHORIZATION=Bearer bcc7a00b-6919-47e1-8724-30999251a866
      - CORS_ORIGIN=*
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=100
    networks:
      - glide-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  glide-network:
    driver: bridge